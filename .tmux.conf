# basic config
set -g default-terminal "tmux-256color" # colors!
# set -g default-terminal "${TERM}" # colors!
set-option -sa terminal-overrides ',xterm*:RGB'
set-option -sa terminal-overrides ',alacritty:RGB'
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

if-shell "command -v fish &>/dev/null" \
        "run 'tmux set -g default-shell $(command -v fish)" \
        "run 'tmux set -g default-shell $(command -v zsh)'"

setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 300                   # increase repeat timeout
set -s focus-events on
set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on
set -g history-limit 5000                 # boost history

# edit configuration
bind e new-window -n "~/.tmux.conf" "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# -- display -------------------------------------------------------------------
set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# rebind prefix key to C-u
unbind C-b
set -g prefix C-y
bind C-y send-prefix


# rebind spliting tmux pane
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# switch session
bind ( switch-client -p
bind ) switch-client -n

# create session
bind C-c new-session
bind C-w new-window

# pane navigation
bind -r h select-pane -L     # move left
bind -r j select-pane -D     # move down
bind -r k select-pane -U     # move up
bind -r l select-pane -R     # move right
bind -r u select-pane -t :.+ # move between active panes
bind > swap-pane -D          # swap current pane with the next one
bind < swap-pane -U          # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# vi-choice is gone in tmux >= 2.4
run -b 'tmux bind -t vi-choice h tree-collapse 2> /dev/null || true'
run -b 'tmux bind -t vi-choice l tree-expand 2> /dev/null || true'
run -b 'tmux bind -t vi-choice K start-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice J end-of-list 2> /dev/null || true'
run -b 'tmux bind -t vi-choice H tree-collapse-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice L tree-expand-all 2> /dev/null || true'
run -b 'tmux bind -t vi-choice Escape cancel 2> /dev/null || true'


# copy mode
bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'

# vim-tmux-navigator configs
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1  ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1  ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from


# force vi mode
set -g status-keys vi
set -g mode-keys vi

####### tmux custom style configs ##########
# move statusline to top
set -g status-position top

# window status line style
set -g status-style bg='#282c34'
set -g window-status-style fg=yellow,dim
set -g window-status-current-style fg=cyan,bold
set -g window-status-separator " | "
set -g window-status-activity-style italics,curly-underscore

window_zoom_format="#{?window_zoomed_flag,#[bold][Z],}"
window_last_used_format="#{?window_last_flag,#[bold][P],}"
set -g window-status-format "#I:#W$window_last_used_format$window_zoom_format"
set -g window-status-current-format "#I:#W$window_zoom_format"

# pane status line style
set -g pane-border-lines single
set -g pane-border-style fg=yellow,dim
set -g pane-active-border-style fg=cyan
# set -g pane-border-format "#[align=right]#{?pane_active,#[reverse],}#{pane_index}#[default] \"#{pane_title}\""
set -g pane-border-status off

# status-line configs
set -g status-left-length 40
prefix_mode_format="#{?client_prefix,#[bg=color172] Prefix ,}#[default]"
copy_mode_format="#{?pane_in_mode,#[bg=color169] Copy ,}#[default]"
set -g status-left "#[fg=blue,bold]<<#S>>#[default] $prefix_mode_format $copy_mode_format"

set -g status-right-length 80
datetime_format="#(date '+%F %H:%M %a')"
weather_format="#(curl -fs wttr.in/Hangzhou\?format\=3)"
battery_format="#{battery_status_bg}ðŸ”‹: #{battery_icon} #{battery_percentage}"
sep="î‚»î‚½"
set -g status-right "#[fg=yellow,bold]$sep $battery_format $sep $weather_format $sep $datetime_format "
# set -g status-right "#[fg=yellow,bold]| $battery_format | $weather_format | $datetime_format "

set -g status-interval 60
set -g status-justify centre

setw -g monitor-activity on
set -g visual-activity on

# message style
# set -g message-style "fg=#FFFFFF,bg=#008000"
# set -g message-command-style "fg=#FFFFFF,bg=#008000"
#

######### tmp configs #########
# set -g @plugin "arcticicestudio/nord-tmux"
# set -g @plugin 'dracula/tmux'
set -g @plugin 'tmux-plukins/tpm'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-battery'
#
# set -g @dracula-show-weather false
# set -g @dracula-show-left-icon session

set -g @continuum-restore 'on'

# auto install tpm and its plugins if tpm not exists
if "test ! -d ~/.tmux/plugins/tpm" \
    "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && bash ~/.tmux/plugins/tpm/bin/install_plugins'"
run -b "~/.tmux/plugins/tpm/tpm"
